{"name":"Molt","body":"Molt\r\n====\r\n\r\n<!-- We strip out 1-line HTML comments prior to passing to pandoc because -->\r\n<!-- PyPI rejects reST long descriptions that contain HTML. -->\r\n\r\n<!-- We leave the leading brackets empty here.  Otherwise, unwanted -->\r\n<!-- caption text shows up in the reST version converted by pandoc. -->\r\n![](https://github.com/cjerdonek/molt/raw/master/images/molt.png \"molting snake\")\r\n\r\n[Molt](http://cjerdonek.github.com/molt/) is a script to stub out projects\r\nin any language instantly using [Mustache](http://mustache.github.com/)-based\r\nproject templates.\r\n\r\nYou can use Molt to decrease the amount of boilerplate code you need to write\r\nwhen starting new projects: the README, copyright notices, license info,\r\nlogging configuration, option parsing, test harness, packaging information,\r\n`.gitignore`, directory hierarchy, etc.\r\n\r\nA minimal sample usage looks like--\r\n\r\n    $ molt -c path_to_config.json path_to_template_dir/\r\n\r\nMolt follows the [Groome](http://cjerdonek.github.com/groome/) rules for\r\nMustache-based project templates.\r\nSee the [Groome](http://cjerdonek.github.com/groome/) page for project\r\ntemplate syntax.  This version of Molt follows\r\n[version 0.1.0](https://github.com/cjerdonek/groome/tree/v0.1.0) of Groome.\r\n\r\nMolt is written in [Python](http://www.python.org/) and can be found on\r\n[GitHub](https://github.com/cjerdonek/molt) and on\r\n[PyPI](http://pypi.python.org/pypi/molt) (the Python Package Index).\r\n\r\nFeedback is welcome.  You can also file bug reports and feature requests\r\non the GitHub [issues page](https://github.com/cjerdonek/molt/issues).\r\n\r\n\r\nRequirements\r\n------------\r\n\r\nMolt supports the following Python versions:\r\n\r\n* Python 2.7\r\n* Python 3.2\r\n* [PyPy](http://pypy.org/)\r\n\r\nPython 3.x support is coming soon.  Since Molt is a development tool, there\r\nare no plans to support Python 2.6 or earlier.\r\n\r\nMolt's dependencies are--\r\n\r\n* [Pystache](https://github.com/defunkt/pystache) version\r\n  [0.5.2](http://pypi.python.org/pypi/pystache) or above\r\n* [PyYAML](http://pypi.python.org/pypi/PyYAML) (optional, to support\r\n  YAML format for configuration files)\r\n\r\nThe installation process below installs these dependencies automatically.\r\n\r\nYou can install to Python 2 with either\r\n[setuptools](http://pypi.python.org/pypi/setuptools) or\r\n[Distribute](http://packages.python.org/distribute/) (preferred).\r\nFor Python 3, you must use Distribute.\r\n\r\n\r\nInstall It\r\n----------\r\n\r\n    $ pip install molt\r\n\r\n\r\nTest it\r\n-------\r\n\r\n    $ molt --run-tests\r\n\r\n\r\nTry it\r\n------\r\n\r\nStart with the [demo](https://github.com/cjerdonek/molt/tree/master/molt/demo)\r\nGroome template to play with:\r\n\r\n    $ molt --create-demo --output demo\r\n    $ ls -p demo\r\n    expected/\tlambdas/\tpartials/\tsample.json\tstructure/\r\n\r\nRender the template with the sample context provided:\r\n\r\n    $ molt --output output --config demo/sample.json demo\r\n\r\nRun the newly-created project (which can also be seen\r\n[here](https://github.com/cjerdonek/molt/tree/master/molt/demo/expected))):\r\n\r\n    $ python output/hello.py world\r\n    Hello, world!\r\n\r\nFor help documentation and available options--\r\n\r\n    $ molt -h\r\n\r\nNote the `--visualize` and `--with-visualize` options that let you\r\nquickly visualize entire directory contents.\r\n\r\n    $ molt --visualize output\r\n\r\nIf using Python, you can also use Molt as a library (though the API is\r\nnot yet stable).  See the `Molter` class in the\r\n[molt.molter](https://github.com/cjerdonek/molt/blob/master/molt/molter.py)\r\nmodule.\r\n\r\n\r\nContribute\r\n----------\r\n\r\nIf using GitHub, after forking--\r\n\r\n    $ git clone git@github.com:yourusername/molt.git\r\n    $ cd molt\r\n    $ git remote add upstream git://github.com/cjerdonek/molt.git\r\n    $ git fetch upstream\r\n\r\nTo run unit tests--\r\n\r\n    $ python test_molt.py\r\n\r\nTo test Molt with multiple versions of Python (with a single command!),\r\nyou can use [tox](http://tox.testrun.org/):\r\n\r\n    pip install tox\r\n    tox\r\n\r\nIf you don't have all Python versions listed in `tox.ini`, you can do--\r\n\r\n    tox -e py27  # for example\r\n\r\nTo run from source any molt command of the form--\r\n\r\n    $ molt [options] [DIRECTORY]\r\n\r\nsimply type--\r\n\r\n    $ python -m molt.commands.molt [options] [DIRECTORY]\r\n\r\nTo include the [Groome tests](https://github.com/cjerdonek/groome/tree/master/tests)\r\nin your test runs, initialize and update the Groome project submodule--\r\n\r\n    $ git submodule init\r\n    $ git submodule update\r\n\r\nTo run a subset of the tests, you can filter your test runs using one or\r\nmore prefixes.  For example--\r\n\r\n    $ python test_molt.py molt.test.common molt.test.dir\r\n\r\nMolt is also [set up](https://github.com/cjerdonek/molt/blob/master/.travis.yml)\r\non GitHub to work with [Travis CI](http://travis-ci.org/).\r\n\r\n\r\n### Python 3 Tips\r\n\r\nMolt is written in Python 2, so the code must be converted to Python 3 prior\r\nto using with Python 3.  The installation process does this automatically.\r\n\r\nTo convert the code to Python 3 manually, run the following using Python 3\r\n(with Distribute installed)--\r\n\r\n    python setup.py build\r\n\r\nThis writes the converted code to a subdirectory of the project directory\r\ncalled `build`.\r\n\r\nIt is possible (though not recommended) to convert the code without using\r\n`setup.py`.  You can try this with [2to3](http://docs.python.org/library/2to3.html),\r\nas follows (two steps):\r\n\r\n    2to3 --write --nobackups --no-diffs --doctests_only molt\r\n    2to3 --write --nobackups --no-diffs molt\r\n\r\nThis converts the code (and doctests) in place.\r\n\r\nTo `import molt` from a source distribution while using Python 3, be sure\r\nthat you are importing from a directory containing the converted code\r\n(e.g. from the `build` directory after converting), and not from the\r\noriginal (unconverted) source directory.  Otherwise, you will get a\r\nsyntax error.  You can help prevent this by not running the Python\r\nIDE from the project directory when importing Molt while using Python 3.\r\n\r\n\r\nAuthor\r\n------\r\n\r\nMolt is authored by [Chris Jerdonek](https://github.com/cjerdonek).\r\nChris is also the author of [Groome](http://cjerdonek.github.com/groome/) and\r\nis the current [Pystache](https://github.com/defunkt/pystache) maintainer.\r\n\r\n\r\nCopyright\r\n---------\r\n\r\nCopyright (C) 2011-2012 Chris Jerdonek. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice,\r\n  this list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright notice,\r\n  this list of conditions and the following disclaimer in the documentation\r\n  and/or other materials provided with the distribution.\r\n* The names of the copyright holders may not be used to endorse or promote\r\n  products derived from this software without specific prior written\r\n  permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGE.\r\n","tagline":"Mustache project templates using Python and Groome. Shed the pain of starting new projects.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}